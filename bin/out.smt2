(set-logic SLHV)
(declare-hvar emp IntHeap)
(declare-locvar nil IntLoc)
(declare-datatype pt_record_0 ((Pt_R_0 (Pt_R_0_1 IntLoc) (Pt_R_0_2 IntLoc))))
(declare-datatype pt_record_1 ((Pt_R_1 (Pt_R_1_1 Int))))
(declare-datatype pt_record_2 ((Pt_R_2 (Pt_R_2_1 Int))))
(declare-datatype pt_record_3 ((Pt_R_3 (Pt_R_3_1 Int))))
(declare-const loc_1 Int)
(declare-const fable_$p8_main0_0 Int)
(declare-const fable_$p8_main0_1 Int)
(declare-const fable_$p6_main0_0 Int)
(declare-const fable_$p6_main0_1 Int)
(declare-const fable_$p3_main0_0 Int)
(declare-const fable_$p3_main0_1 Int)
(declare-const fable_$p1_main0_0 Int)
(declare-const fable_$p1_main0_1 Int)
(declare-const fable_$p0_main0_0 Int)
(declare-const fable_$p0_main0_1 Int)
(declare-const $r_main0_0 Int)
(declare-const $r_main0_1 Int)
(declare-hvar H7_1 IntHeap)
(declare-hvar H_1 IntHeap)
(declare-locvar $p8_main01_1 IntLoc)
(declare-locvar $p8_main0_1 IntLoc)
(declare-locvar $p6_main01_1 IntLoc)
(declare-locvar $p6_main0_1 IntLoc)
(declare-locvar $p3_main0_0 IntLoc)
(declare-locvar $p3_main0_1 IntLoc)
(declare-locvar $p1_main0_0 IntLoc)
(declare-locvar $p1_main0_1 IntLoc)
(declare-locvar $p0_main0_0 IntLoc)
(declare-locvar $p0_main0_1 IntLoc)
(declare-const $i9_main01_1 Int)
(declare-const $i9_main0_1 Int)
(declare-locvar l12 IntLoc)
(declare-locvar l11 IntLoc)
(declare-locvar $p0_main0 IntLoc)
(declare-hvar h6 IntHeap)
(declare-locvar l9 IntLoc)
(declare-locvar l10 IntLoc)
(declare-hvar h5 IntHeap)
(declare-locvar l8 IntLoc)
(declare-locvar $p3_main0 IntLoc)
(declare-locvar l6 IntLoc)
(declare-hvar h4 IntHeap)
(declare-locvar l7 IntLoc)
(declare-hvar H6_1 IntHeap)
(declare-const d4 Int)
(declare-hvar H5_1 IntHeap)
(declare-locvar l5 IntLoc)
(declare-locvar $p1_main0 IntLoc)
(declare-locvar l4 IntLoc)
(declare-hvar h3 IntHeap)
(declare-locvar l3 IntLoc)
(declare-hvar H4_1 IntHeap)
(declare-const d3 Int)
(declare-hvar H3_1 IntHeap)
(declare-locvar l2 IntLoc)
(declare-locvar l1 IntLoc)
(declare-hvar H_0 IntHeap)
(declare-const loc_0 Int)
(declare-locvar $p8_main0_0 IntLoc)
(declare-locvar $p6_main0_0 IntLoc)
(declare-const $i9_main0_0 Int)
(declare-hvar H2_1 IntHeap)
(declare-hvar h2 IntHeap)
(declare-const d2_1 Int)
(declare-locvar $p8_main0 IntLoc)
(declare-hvar H1_1 IntHeap)
(declare-hvar h1 IntHeap)
(declare-const d1_1 Int)
(declare-locvar $p6_main0 IntLoc)
(declare-const $i9_main0 Int)
(declare-const $r_main01_1 Int)
(declare-hvar emp IntHeap)
(assert
 (let (($x357 (or (= loc_1 2) (= loc_1 3))))
 (let (($x180 (= fable_$p8_main0_1 fable_$p8_main0_0)))
 (let (($x176 (= fable_$p6_main0_1 fable_$p6_main0_0)))
 (let (($x172 (= fable_$p3_main0_1 fable_$p3_main0_0)))
 (let (($x168 (= fable_$p1_main0_1 fable_$p1_main0_0)))
 (let (($x164 (= fable_$p0_main0_1 fable_$p0_main0_0)))
 (let (($x197 (= $r_main0_1 $r_main0_0)))
 (let (($x347 (= H_1 H7_1)))
 (let (($x345 (= $p8_main0_1 $p8_main01_1)))
 (let (($x343 (= $p6_main0_1 $p6_main01_1)))
 (let (($x149 (= $p3_main0_1 $p3_main0_0)))
 (let (($x145 (= $p1_main0_1 $p1_main0_0)))
 (let (($x141 (= $p0_main0_1 $p0_main0_0)))
 (let (($x338 (= $i9_main0_1 $i9_main01_1)))
 (let (($x310 (or (and (= $p6_main01_1 $p8_main01_1) (= $i9_main01_1 1)) (and (not (= $p6_main01_1 $p8_main01_1)) (= $i9_main01_1 0)))))
 (let (($x311 (= $p8_main01_1 l12)))
 (let ((?x110 (uplus h6 (pt $p0_main0 (Pt_R_0 l11 l12)))))
 (let (($x312 (= H7_1 ?x110)))
 (let (($x314 (= $p6_main01_1 l9)))
 (let ((?x99 (uplus h5 (pt $p0_main0 (Pt_R_0 l9 l10)))))
 (let (($x315 (= H7_1 ?x99)))
 (let (($x90 (= $p3_main0 l8)))
 (let ((?x87 (uplus h4 (pt $p0_main0 (Pt_R_0 l6 l8)))))
 (let (($x317 (= H7_1 ?x87)))
 (let ((?x85 (uplus h4 (pt $p0_main0 (Pt_R_0 l6 l7)))))
 (let (($x318 (= H6_1 ?x85)))
 (let (($x322 (= H6_1 (uplus H5_1 (pt $p3_main0 (Pt_R_3 d4))))))
 (let (($x65 (= $p1_main0 l5)))
 (let ((?x62 (uplus h3 (pt $p0_main0 (Pt_R_0 l5 l4)))))
 (let (($x323 (= H5_1 ?x62)))
 (let ((?x60 (uplus h3 (pt $p0_main0 (Pt_R_0 l3 l4)))))
 (let (($x324 (= H4_1 ?x60)))
 (let (($x328 (= H4_1 (uplus H3_1 (pt $p1_main0 (Pt_R_3 d3))))))
 (let (($x330 (= H3_1 (uplus H_0 (pt $p0_main0 (Pt_R_0 l1 l2))))))
 (let (($x334 (and (and (and (and $x330 $x328) (and (and $x324 $x323) $x65)) $x322) (and (and $x318 $x317) $x90))))
 (let (($x339 (and (and (and (and $x334 (and $x315 $x314)) (and $x312 $x311)) $x310) $x338)))
 (let (($x348 (and (and (and (and (and (and $x339 $x141) $x145) $x149) $x343) $x345) $x347)))
 (let (($x354 (and (and (and (and (and (and $x348 $x197) $x164) $x168) $x172) $x176) $x180)))
 (let (($x359 (not (= loc_0 5))))
 (let (($x184 (= loc_1 4)))
 (let (($x160 (= H_1 H_0)))
 (let (($x157 (= $p8_main0_1 $p8_main0_0)))
 (let (($x153 (= $p6_main0_1 $p6_main0_0)))
 (let (($x252 (and (and (and (and true (= $i9_main0_1 $i9_main0_0)) $x141) $x145) $x149)))
 (let (($x258 (and (and (and (and (and (and $x252 $x153) $x157) $x197) $x160) $x164) $x168)))
 (let (($x263 (not (= loc_0 4))))
 (let (($x205 (= loc_1 1)))
 (let (($x237 (= H_1 H2_1)))
 (let (($x137 (= $i9_main0_1 $i9_main0_0)))
 (let (($x220 (= H2_1 h2)))
 (let (($x224 (= H1_1 (uplus h2 (pt $p8_main0 (Pt_R_3 d2_1))))))
 (let (($x226 (= H1_1 h1)))
 (let (($x230 (= H_0 (uplus h1 (pt $p6_main0 (Pt_R_3 d1_1))))))
 (let (($x10 (= $i9_main0 1)))
 (let (($x235 (and (and (and (and $x10 (and $x230 $x226)) (and $x224 $x220)) $x137) $x153)))
 (let (($x242 (and (and (and (and (and (and $x235 $x157) $x237) $x141) $x145) $x149) $x197)))
 (let (($x248 (and (and (and (and (and (and $x242 $x164) $x168) $x172) $x176) $x180) $x205)))
 (let (($x249 (not (= loc_0 3))))
 (let (($x195 (and (and (and (and (and (and (not $x10) $x137) $x141) $x145) $x149) $x153) $x157)))
 (let (($x203 (and (and (and (and (and (and $x195 $x197) $x160) $x164) $x168) $x172) $x176)))
 (let (($x207 (not (= loc_0 2))))
 (let (($x142 (and (and (and (= $r_main01_1 0) (= $r_main0_1 $r_main01_1)) $x137) $x141)))
 (let (($x165 (and (and (and (and (and (and $x142 $x145) $x149) $x153) $x157) $x160) $x164)))
 (let (($x186 (not (= loc_0 1))))
 (let (($x187 (or $x186 (and (and (and (and (and $x165 $x168) $x172) $x176) $x180) $x184))))
 (let (($x218 (and (and (and true $x187) (or $x207 (and (and $x203 $x180) $x205))) (or $x249 $x248))))
 (let (($x265 (and $x218 (or $x263 (and (and (and (and $x258 $x172) $x176) $x180) $x184)))))
 (let (($x126 (= H_0 emp)))
 (and $x126 (and $x265 (or $x359 (and $x354 $x357)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
