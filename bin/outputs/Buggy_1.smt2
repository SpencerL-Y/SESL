(set-logic SLHV)
(declare-hvar emp IntHeap)
(declare-locvar nil IntLoc)
(declare-datatype pt_record_0 ((Pt_R_0 (loc IntLoc))))
(declare-datatype pt_record_1 ((Pt_R_1 (data Int))))
(declare-const d13 Int)
(declare-locvar l8 IntLoc)
(declare-hvar ah1 IntHeap)
(declare-hvar AH_1 IntHeap)
(declare-const d12 Int)
(declare-locvar l6 IntLoc)
(declare-hvar h7 IntHeap)
(declare-hvar H_1 IntHeap)
(declare-locvar l7 IntLoc)
(declare-const loc_1 Int)
(declare-hvar H5_1 IntHeap)
(declare-hvar AH2_1 IntHeap)
(declare-const $r_main01_1 Int)
(declare-const $r_main0_1 Int)
(declare-locvar $p4_main01_1 IntLoc)
(declare-locvar $p4_main0_1 IntLoc)
(declare-locvar $p3_main01_1 IntLoc)
(declare-locvar $p3_main0_1 IntLoc)
(declare-locvar $p2_main01_1 IntLoc)
(declare-locvar $p2_main0_1 IntLoc)
(declare-locvar $p1_main01_1 IntLoc)
(declare-locvar $p1_main0_1 IntLoc)
(declare-locvar $p0_main01_1 IntLoc)
(declare-locvar $p0_main0_1 IntLoc)
(declare-hvar h5_1 IntHeap)
(declare-const d10_1 Int)
(declare-hvar H4_1 IntHeap)
(declare-hvar h3_1 IntHeap)
(declare-const d8_1 Int)
(declare-hvar H3_1 IntHeap)
(declare-hvar h1_1 IntHeap)
(declare-const d6_1 Int)
(declare-hvar H2_1 IntHeap)
(declare-locvar l4_1 IntLoc)
(declare-hvar AH1_1 IntHeap)
(declare-locvar l5_1 IntLoc)
(declare-const d5_1 Int)
(declare-const d4_1 Int)
(declare-hvar H1_1 IntHeap)
(declare-locvar l1_1 IntLoc)
(declare-hvar AH_0 IntHeap)
(declare-locvar l2_1 IntLoc)
(declare-locvar l3_1 IntLoc)
(declare-const d3_1 Int)
(declare-const d2_1 Int)
(declare-const d1_1 Int)
(declare-hvar H_0 IntHeap)
(declare-const loc_0 Int)
(declare-const invalidFree_1 Bool)
(declare-const invalidFree_0 Bool)
(declare-const invalidDeref_1 Bool)
(declare-const invalidDeref3_1 Bool)
(declare-const invalidDeref2_1 Bool)
(declare-const d11_1 Int)
(declare-hvar h6_1 IntHeap)
(declare-const invalidDeref1_1 Bool)
(declare-const d9_1 Int)
(declare-hvar h4_1 IntHeap)
(declare-const invalidDeref_0 Bool)
(declare-const d7_1 Int)
(declare-hvar h2_1 IntHeap)
(assert
 (let (($x457 (= AH_1 (uplus ah1 (pt l8 (Pt_R_1 d13))))))
 (let (($x450 (or (= H_1 (uplus h7 (pt l6 (Pt_R_0 l7)))) (= H_1 (uplus h7 (pt l6 (Pt_R_1 d12)))))))
 (let (($x395 (= loc_1 2)))
 (let (($x388 (= H_1 H5_1)))
 (let (($x385 (= AH_1 AH2_1)))
 (let (($x382 (= $r_main0_1 $r_main01_1)))
 (let (($x379 (= $p4_main0_1 $p4_main01_1)))
 (let (($x376 (= $p3_main0_1 $p3_main01_1)))
 (let (($x373 (= $p2_main0_1 $p2_main01_1)))
 (let (($x374 (and (and (= $p0_main0_1 $p0_main01_1) (= $p1_main0_1 $p1_main01_1)) $x373)))
 (let (($x389 (and (and (and (and (and $x374 $x376) $x379) $x382) $x385) $x388)))
 (let (($x250 (= $r_main01_1 0)))
 (let (($x256 (= H5_1 (uplus h5_1 (pt $p4_main01_1 (Pt_R_1 1))))))
 (let (($x260 (= H4_1 (uplus h5_1 (pt $p4_main01_1 (Pt_R_1 d10_1))))))
 (let (($x261 (and $x260 $x256)))
 (let (($x273 (= $p4_main01_1 (locadd $p3_main01_1 1))))
 (let (($x279 (= H4_1 (uplus h3_1 (pt $p3_main01_1 (Pt_R_1 1))))))
 (let (($x283 (= H3_1 (uplus h3_1 (pt $p3_main01_1 (Pt_R_1 d8_1))))))
 (let (($x284 (and $x283 $x279)))
 (let (($x299 (= H3_1 (uplus h1_1 (pt $p1_main01_1 (Pt_R_1 10))))))
 (let (($x303 (= H2_1 (uplus h1_1 (pt $p1_main01_1 (Pt_R_1 d6_1))))))
 (let (($x304 (and $x303 $x299)))
 (let (($x315 (= $p3_main01_1 $p2_main01_1)))
 (let (($x319 (= AH2_1 (uplus AH1_1 (pt l4_1 (Pt_R_1 3))))))
 (let (($x320 (= $p2_main01_1 l4_1)))
 (let (($x322 (= l5_1 (locadd l4_1 1))))
 (let ((?x328 (uplus H1_1 (uplus (pt l4_1 (Pt_R_1 d4_1)) (pt l5_1 (Pt_R_1 d5_1))))))
 (let (($x329 (= H2_1 ?x328)))
 (let (($x332 (and (and (and $x329 $x322) $x320) $x319)))
 (let (($x334 (= $p1_main01_1 $p0_main01_1)))
 (let (($x338 (= AH1_1 (uplus AH_0 (pt l1_1 (Pt_R_1 2))))))
 (let (($x339 (= $p0_main01_1 l1_1)))
 (let (($x341 (= l3_1 (locadd l2_1 1))))
 (let (($x343 (= l2_1 (locadd l1_1 1))))
 (let ((?x352 (uplus (uplus (pt l1_1 (Pt_R_1 d1_1)) (pt l2_1 (Pt_R_1 d2_1))) (pt l3_1 (Pt_R_1 d3_1)))))
 (let (($x354 (= H1_1 (uplus H_0 ?x352))))
 (let (($x357 (and (and (and $x354 (and $x343 $x341)) $x339) $x338)))
 (let (($x430 (and (and (and (and (and (and $x357 $x334) $x332) $x315) $x304) $x284) $x273)))
 (let (($x207 (= loc_0 1)))
 (let (($x460 (and (=> $x207 (and (and (and (and $x430 $x261) $x250) $x389) $x395)) (and (and $x395 $x450) $x457))))
 (let (($x420 (= invalidFree_1 invalidFree_0)))
 (let (($x401 (or $x250 invalidFree_0)))
 (let (($x402 (or $x261 invalidFree_0)))
 (let (($x403 (or $x273 invalidFree_0)))
 (let (($x404 (or $x284 invalidFree_0)))
 (let (($x405 (or $x304 invalidFree_0)))
 (let (($x406 (or $x315 invalidFree_0)))
 (let (($x411 (and (and (or $x357 invalidFree_0) (or $x334 invalidFree_0)) (or $x332 invalidFree_0))))
 (let (($x417 (and (and (and (and (and (and $x411 $x406) $x405) $x404) $x403) $x402) $x401)))
 (let (($x400 (not invalidFree_0)))
 (let (($x437 (and (and $x400 (=> $x207 (and (and (and $x417 $x389) $x420) $x395))) invalidFree_1)))
 (let (($x391 (= invalidDeref_1 invalidDeref3_1)))
 (let (($x252 (= invalidDeref3_1 invalidDeref2_1)))
 (let (($x253 (and invalidDeref2_1 $x252)))
 (let (($x263 (= $p4_main01_1 nil)))
 (let (($x267 (= h6_1 (uplus H4_1 (pt $p4_main01_1 (Pt_R_1 d11_1))))))
 (let (($x275 (= invalidDeref2_1 invalidDeref1_1)))
 (let (($x276 (and invalidDeref1_1 $x275)))
 (let (($x286 (= $p3_main01_1 nil)))
 (let (($x290 (= h4_1 (uplus H3_1 (pt $p3_main01_1 (Pt_R_1 d9_1))))))
 (let (($x295 (= invalidDeref1_1 invalidDeref_0)))
 (let (($x296 (and invalidDeref_0 $x295)))
 (let (($x306 (= $p1_main01_1 nil)))
 (let (($x310 (= h2_1 (uplus H2_1 (pt $p1_main01_1 (Pt_R_1 d7_1))))))
 (let (($x360 (and (and (or $x357 invalidDeref_0) (or $x334 invalidDeref_0)) (or $x332 invalidDeref_0))))
 (let (($x362 (and (and $x360 (or $x315 invalidDeref_0)) (or (or (and (or $x310 $x306) invalidDeref1_1) (and $x304 $x295)) $x296))))
 (let (($x363 (and $x362 (or (or (and (or $x290 $x286) invalidDeref2_1) (and $x284 $x275)) $x276))))
 (let (($x365 (and (and $x363 (or $x273 invalidDeref2_1)) (or (or (and (or $x267 $x263) invalidDeref3_1) (and $x261 $x252)) $x253))))
 (let (($x396 (and (and (and (and $x365 (or $x250 invalidDeref3_1)) $x389) $x391) $x395)))
 (let (($x211 (not invalidDeref_0)))
 (and (and (and (= H_0 emp) (= AH_0 emp)) $x207) (or (or (and (and $x211 (=> $x207 $x396)) invalidDeref_1) $x437) $x460)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
