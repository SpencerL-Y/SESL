SMACK program verifier version 2.6.3
WARNING: inttoptr @ addr 0x1a53548 is (unsoundly) assumed to point to a fresh memory region.
 WARNING: inttoptr @ addr 0x19efa88 is (unsoundly) assumed to point to a fresh memory region.
 [regions] for:   %14 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 1, !dbg !66, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %18 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 0, !dbg !69, !verifier.code !41
   in function: main
 [regions]   using region: <Node:i32>[0,4]{A}
 [regions]   returning index: 1
 
 [regions] for:   %26 = getelementptr inbounds %struct.list, %struct.list* %22, i32 0, i32 0, !dbg !77, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %29 = getelementptr inbounds %struct.list, %struct.list* %22, i32 0, i32 1, !dbg !79, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %33 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !93, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %38 = getelementptr inbounds %struct.list, %struct.list* %.01, i32 0, i32 0, !dbg !97, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %42 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !98, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %46 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !101, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %53 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !109, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %57 = getelementptr inbounds %struct.node, %struct.node* %56, i32 0, i32 1, !dbg !113, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %61 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !115, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %67 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !119, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %71 = getelementptr inbounds %struct.list, %struct.list* %70, i32 0, i32 1, !dbg !122, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %75 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !123, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %80 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !126, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %84 = getelementptr inbounds %struct.list, %struct.list* %83, i32 0, i32 0, !dbg !127, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %88 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !128, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %97 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !133, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %104 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !140, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %108 = getelementptr inbounds %struct.node, %struct.node* %107, i32 0, i32 1, !dbg !144, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %112 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !146, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %118 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !150, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %122 = getelementptr inbounds %struct.list, %struct.list* %121, i32 0, i32 1, !dbg !153, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %126 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !154, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %131 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !157, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %135 = getelementptr inbounds %struct.list, %struct.list* %134, i32 0, i32 0, !dbg !158, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %139 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !159, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %149 = getelementptr inbounds %struct.list, %struct.list* %.012, i32 0, i32 1, !dbg !171, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %160 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 1, !dbg !176, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %166 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 1, !dbg !183, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %171 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 0, !dbg !194, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %2 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %177 = getelementptr inbounds %struct.list, %struct.list* %163, i32 0, i32 0, !dbg !197, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %3 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %2 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %3 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %3 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %2 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %.04 = phi %struct.node** [ %2, %208 ], [ %3, %209 ], !dbg !213, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %214 = getelementptr inbounds %struct.node, %struct.node* %213, i32 0, i32 1, !dbg !216, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %.04 = phi %struct.node** [ %2, %208 ], [ %3, %209 ], !dbg !213, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %220 = getelementptr inbounds %struct.node, %struct.node* %213, i32 0, i32 1, !dbg !218, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %.014 = phi %struct.node** [ %170, %169 ], [ %225, %210 ], !dbg !191, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %227 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 1, !dbg !224, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %230 = getelementptr inbounds %struct.list, %struct.list* %163, i32 0, i32 1, !dbg !226, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %237 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !239, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %242 = getelementptr inbounds %struct.list, %struct.list* %.012, i32 0, i32 0, !dbg !243, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %246 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !244, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %250 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !247, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %257 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !255, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %261 = getelementptr inbounds %struct.node, %struct.node* %260, i32 0, i32 1, !dbg !259, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %265 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !261, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %271 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !265, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %275 = getelementptr inbounds %struct.list, %struct.list* %274, i32 0, i32 1, !dbg !268, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %279 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !269, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %284 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !272, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %288 = getelementptr inbounds %struct.list, %struct.list* %287, i32 0, i32 0, !dbg !273, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %292 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !274, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %301 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !279, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %308 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !286, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %312 = getelementptr inbounds %struct.node, %struct.node* %311, i32 0, i32 1, !dbg !290, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %316 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !292, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %322 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !296, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %326 = getelementptr inbounds %struct.list, %struct.list* %325, i32 0, i32 1, !dbg !299, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %330 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !300, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %335 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !303, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %339 = getelementptr inbounds %struct.list, %struct.list* %338, i32 0, i32 0, !dbg !304, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %343 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !305, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %353 = getelementptr inbounds %struct.list, %struct.list* %.1, i32 0, i32 1, !dbg !313, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %357 = getelementptr inbounds %struct.list, %struct.list* %.1, i32 0, i32 0, !dbg !317, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %364 = getelementptr inbounds %struct.node, %struct.node* %.0, i32 0, i32 1, !dbg !320, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 We are now translating the program to boogie...
 Analyzing globals...
 -------INSERT: Global Variables .str.31
 Analyzing functions...
 Analyzing function: main
 -------INSERT: Global Variables main
 Analyzing function body: main
 Generating body for main
 [regions] for:   %14 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 1, !dbg !66, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %14 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 1, !dbg !66, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %18 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 0, !dbg !69, !verifier.code !41
   in function: main
 [regions]   using region: <Node:i32>[0,4]{A}
    found overlap at index 1: <Node:i32>[0,4]{A}
 [regions]   merged region: <Node:i32>[0,4]{A}
 [regions]   returning index: 1
 
 [regions] for:   %18 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 0, !dbg !69, !verifier.code !41
   in function: main
 [regions]   using region: <Node:i32>[0,4]{A}
    found overlap at index 1: <Node:i32>[0,4]{A}
 [regions]   merged region: <Node:i32>[0,4]{A}
 [regions]   returning index: 1
 
 [regions] for:   %26 = getelementptr inbounds %struct.list, %struct.list* %22, i32 0, i32 0, !dbg !77, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %26 = getelementptr inbounds %struct.list, %struct.list* %22, i32 0, i32 0, !dbg !77, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %29 = getelementptr inbounds %struct.list, %struct.list* %22, i32 0, i32 1, !dbg !79, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %29 = getelementptr inbounds %struct.list, %struct.list* %22, i32 0, i32 1, !dbg !79, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %33 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !93, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %33 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !93, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %38 = getelementptr inbounds %struct.list, %struct.list* %.01, i32 0, i32 0, !dbg !97, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %42 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !98, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %42 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !98, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %46 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !101, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %53 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !109, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %57 = getelementptr inbounds %struct.node, %struct.node* %56, i32 0, i32 1, !dbg !113, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %61 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !115, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %61 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !115, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %67 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !119, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %71 = getelementptr inbounds %struct.list, %struct.list* %70, i32 0, i32 1, !dbg !122, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %75 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !123, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %75 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !123, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %80 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !126, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %84 = getelementptr inbounds %struct.list, %struct.list* %83, i32 0, i32 0, !dbg !127, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %88 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !128, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %88 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !128, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %97 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !133, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %104 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !140, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %108 = getelementptr inbounds %struct.node, %struct.node* %107, i32 0, i32 1, !dbg !144, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %112 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !146, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %112 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !146, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %118 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !150, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %122 = getelementptr inbounds %struct.list, %struct.list* %121, i32 0, i32 1, !dbg !153, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %126 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !154, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %126 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !154, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %131 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 0, !dbg !157, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 3: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 3
 
 [regions] for:   %135 = getelementptr inbounds %struct.list, %struct.list* %134, i32 0, i32 0, !dbg !158, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %139 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !159, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %139 = getelementptr inbounds %struct.iterator, %struct.iterator* %1, i32 0, i32 1, !dbg !159, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 4: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 4
 
 [regions] for:   %149 = getelementptr inbounds %struct.list, %struct.list* %.012, i32 0, i32 1, !dbg !171, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %160 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 1, !dbg !176, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %166 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 1, !dbg !183, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %166 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 1, !dbg !183, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %171 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 0, !dbg !194, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %2 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %2 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %177 = getelementptr inbounds %struct.list, %struct.list* %163, i32 0, i32 0, !dbg !197, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %3 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %3 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %2 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %3 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %3 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %2 = alloca %struct.node*, align 8, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %.04 = phi %struct.node** [ %2, %208 ], [ %3, %209 ], !dbg !213, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %214 = getelementptr inbounds %struct.node, %struct.node* %213, i32 0, i32 1, !dbg !216, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %.04 = phi %struct.node** [ %2, %208 ], [ %3, %209 ], !dbg !213, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %.04 = phi %struct.node** [ %2, %208 ], [ %3, %209 ], !dbg !213, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[0,8]{A}
    found overlap at index 5: <Node:%struct.node*>[0,8]{A}
 [regions]   merged region: <Node:%struct.node*>[0,8]{A}
 [regions]   returning index: 5
 
 [regions] for:   %220 = getelementptr inbounds %struct.node, %struct.node* %213, i32 0, i32 1, !dbg !218, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %220 = getelementptr inbounds %struct.node, %struct.node* %213, i32 0, i32 1, !dbg !218, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %.014 = phi %struct.node** [ %170, %169 ], [ %225, %210 ], !dbg !191, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %.014 = phi %struct.node** [ %170, %169 ], [ %225, %210 ], !dbg !191, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %227 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 1, !dbg !224, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %227 = getelementptr inbounds %struct.list, %struct.list* %.113, i32 0, i32 1, !dbg !224, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %230 = getelementptr inbounds %struct.list, %struct.list* %163, i32 0, i32 1, !dbg !226, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %237 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !239, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %237 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !239, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %242 = getelementptr inbounds %struct.list, %struct.list* %.012, i32 0, i32 0, !dbg !243, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %246 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !244, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %246 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !244, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %250 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !247, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %257 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !255, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %261 = getelementptr inbounds %struct.node, %struct.node* %260, i32 0, i32 1, !dbg !259, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %265 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !261, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %265 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !261, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %271 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !265, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %275 = getelementptr inbounds %struct.list, %struct.list* %274, i32 0, i32 1, !dbg !268, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %279 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !269, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %279 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !269, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %284 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !272, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %288 = getelementptr inbounds %struct.list, %struct.list* %287, i32 0, i32 0, !dbg !273, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %292 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !274, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %292 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !274, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %301 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !279, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %308 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !286, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %312 = getelementptr inbounds %struct.node, %struct.node* %311, i32 0, i32 1, !dbg !290, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %316 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !292, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %316 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !292, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %322 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !296, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %326 = getelementptr inbounds %struct.list, %struct.list* %325, i32 0, i32 1, !dbg !299, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %330 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !300, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %330 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !300, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %335 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 0, !dbg !303, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[0,8]{A}
    found overlap at index 6: <Node:%struct.list*>[0,8]{A}
 [regions]   merged region: <Node:%struct.list*>[0,8]{A}
 [regions]   returning index: 6
 
 [regions] for:   %339 = getelementptr inbounds %struct.list, %struct.list* %338, i32 0, i32 0, !dbg !304, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %343 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !305, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %343 = getelementptr inbounds %struct.iterator, %struct.iterator* %4, i32 0, i32 1, !dbg !305, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 7: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 7
 
 [regions] for:   %353 = getelementptr inbounds %struct.list, %struct.list* %.1, i32 0, i32 1, !dbg !313, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.list*>[16,24]{A}
    found overlap at index 2: <Node:%struct.list*>[16,24]{A}
 [regions]   merged region: <Node:%struct.list*>[16,24]{A}
 [regions]   returning index: 2
 
 [regions] for:   %357 = getelementptr inbounds %struct.list, %struct.list* %.1, i32 0, i32 0, !dbg !317, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 [regions] for:   %364 = getelementptr inbounds %struct.node, %struct.node* %.0, i32 0, i32 1, !dbg !320, !verifier.code !41
   in function: main
 [regions]   using region: <Node:%struct.node*>[8,16]{A}
    found overlap at index 0: <Node:%struct.node*>[8,16]{A}
 [regions]   merged region: <Node:%struct.node*>[8,16]{A}
 [regions]   returning index: 0
 
 
 Finished analyzing function: main
 
 Analyzing function: llvm.dbg.declare
 -------INSERT: Global Variables llvm.dbg.declare
 Analyzing function: malloc
 -------INSERT: Global Variables malloc
 Analyzing function: free_
 -------INSERT: Global Variables free_
 Analyzing function: __SMACK_code
 -------INSERT: Global Variables __SMACK_code
 Analyzing function: __VERIFIER_assume
 -------INSERT: Global Variables __VERIFIER_assume
 Analyzing function body: __VERIFIER_assume
 Generating body for __VERIFIER_assume
 
 Finished analyzing function: __VERIFIER_assume
 
 Analyzing function: __SMACK_dummy
 -------INSERT: Global Variables __SMACK_dummy
 Analyzing function body: __SMACK_dummy
 Generating body for __SMACK_dummy
 
 Finished analyzing function: __SMACK_dummy
 
 Analyzing function: __SMACK_and32
 -------INSERT: Global Variables __SMACK_and32
 Analyzing function body: __SMACK_and32
 Generating body for __SMACK_and32
 
 Finished analyzing function: __SMACK_and32
 
 Analyzing function: __SMACK_and64
 -------INSERT: Global Variables __SMACK_and64
 Analyzing function body: __SMACK_and64
 Generating body for __SMACK_and64
 
 Finished analyzing function: __SMACK_and64
 
 Analyzing function: __SMACK_and16
 -------INSERT: Global Variables __SMACK_and16
 Analyzing function body: __SMACK_and16
 Generating body for __SMACK_and16
 
 Finished analyzing function: __SMACK_and16
 
 Analyzing function: __SMACK_and8
 -------INSERT: Global Variables __SMACK_and8
 Analyzing function body: __SMACK_and8
 Generating body for __SMACK_and8
 
 Finished analyzing function: __SMACK_and8
 
 Analyzing function: __SMACK_or32
 -------INSERT: Global Variables __SMACK_or32
 Analyzing function body: __SMACK_or32
 Generating body for __SMACK_or32
 
 Finished analyzing function: __SMACK_or32
 
 Analyzing function: __SMACK_or64
 -------INSERT: Global Variables __SMACK_or64
 Analyzing function body: __SMACK_or64
 Generating body for __SMACK_or64
 
 Finished analyzing function: __SMACK_or64
 
 Analyzing function: __SMACK_or16
 -------INSERT: Global Variables __SMACK_or16
 Analyzing function body: __SMACK_or16
 Generating body for __SMACK_or16
 
 Finished analyzing function: __SMACK_or16
 
 Analyzing function: __SMACK_or8
 -------INSERT: Global Variables __SMACK_or8
 Analyzing function body: __SMACK_or8
 Generating body for __SMACK_or8
 
 Finished analyzing function: __SMACK_or8
 
 Analyzing function: __SMACK_check_overflow
 -------INSERT: Global Variables __SMACK_check_overflow
 Analyzing function body: __SMACK_check_overflow
 Generating body for __SMACK_check_overflow
 
 Finished analyzing function: __SMACK_check_overflow
 
 Analyzing function: __VERIFIER_nondet_int
 -------INSERT: Global Variables __VERIFIER_nondet_int
 Analyzing function body: __VERIFIER_nondet_int
 Generating body for __VERIFIER_nondet_int
 
 Finished analyzing function: __VERIFIER_nondet_int
 
 Analyzing function: __SMACK_nondet_int
 -------INSERT: Global Variables __SMACK_nondet_int
 Analyzing function: __SMACK_decls
 -------INSERT: Global Variables __SMACK_decls
 Analyzing function body: __SMACK_decls
 Generating body for __SMACK_decls
 
 Finished analyzing function: __SMACK_decls
 
 Analyzing function: __SMACK_top_decl
 -------INSERT: Global Variables __SMACK_top_decl
 Analyzing function: __SMACK_check_memory_safety
 -------INSERT: Global Variables __SMACK_check_memory_safety
 Analyzing function: __SMACK_check_memory_leak
 -------INSERT: Global Variables __SMACK_check_memory_leak
 Analyzing function body: __SMACK_check_memory_leak
 Generating body for __SMACK_check_memory_leak
 
 Finished analyzing function: __SMACK_check_memory_leak
 
 Analyzing function: __SMACK_init_func_memory_model
 -------INSERT: Global Variables __SMACK_init_func_memory_model
 Analyzing function body: __SMACK_init_func_memory_model
 Generating body for __SMACK_init_func_memory_model
 
 Finished analyzing function: __SMACK_init_func_memory_model
 
 Analyzing function: __SMACK_my_memory_check
 -------INSERT: Global Variables __SMACK_my_memory_check
 Analyzing function body: __SMACK_my_memory_check
 Generating body for __SMACK_my_memory_check
 
 Finished analyzing function: __SMACK_my_memory_check
 
 Analyzing function: __SMACK_decl
 -------INSERT: Global Variables __SMACK_decl
 Analyzing function: __SMACK_whatIsThis
 -------INSERT: Global Variables __SMACK_whatIsThis
 Analyzing function body: __SMACK_whatIsThis
 Generating body for __SMACK_whatIsThis
 
 Finished analyzing function: __SMACK_whatIsThis
 
 Analyzing function: __WHAT_code
 -------INSERT: Global Variables __WHAT_code
 Analyzing function: abort
 -------INSERT: Global Variables abort
 Analyzing function body: abort
 Generating body for abort
 
 Finished analyzing function: abort
 
 Analyzing function: llvm.dbg.value
 -------INSERT: Global Variables llvm.dbg.value
 Analyzing function: __SMACK_static_init
 -------INSERT: Global Variables __SMACK_static_init
 Analyzing function body: __SMACK_static_init
 Generating body for __SMACK_static_init
 
 Finished analyzing function: __SMACK_static_init
 
 Start Analyzing Prelude: main
 
 Start Analyzing Prelude: llvm.dbg.declare
 
 Start Analyzing Prelude: malloc
 
 Start Analyzing Prelude: free_
 
 Start Analyzing Prelude: __SMACK_code.ref
 
 Start Analyzing Prelude: __SMACK_code.ref.i32
 
 Start Analyzing Prelude: __VERIFIER_assume
 
 Start Analyzing Prelude: __SMACK_dummy
 
 Start Analyzing Prelude: __SMACK_and32
 
 Start Analyzing Prelude: __SMACK_and64
 
 Start Analyzing Prelude: __SMACK_and16
 
 Start Analyzing Prelude: __SMACK_and8
 
 Start Analyzing Prelude: __SMACK_or32
 
 Start Analyzing Prelude: __SMACK_or64
 
 Start Analyzing Prelude: __SMACK_or16
 
 Start Analyzing Prelude: __SMACK_or8
 
 Start Analyzing Prelude: __SMACK_check_overflow
 
 Start Analyzing Prelude: __VERIFIER_nondet_int
 
 Start Analyzing Prelude: __SMACK_nondet_int
 
 Start Analyzing Prelude: __SMACK_top_decl.ref
 
 Start Analyzing Prelude: __SMACK_check_memory_safety
 
 Start Analyzing Prelude: __SMACK_check_memory_leak
 
 Start Analyzing Prelude: __SMACK_init_func_memory_model
 
 Start Analyzing Prelude: __SMACK_my_memory_check
 
 Start Analyzing Prelude: __SMACK_decl.ref
 
 Start Analyzing Prelude: __SMACK_whatIsThis
 
 Start Analyzing Prelude: __WHAT_code.ref
 
 Start Analyzing Prelude: abort
 
 Start Analyzing Prelude: llvm.dbg.value
 
 Start Analyzing Prelude: __SMACK_static_init
 
 Start Analyzing Prelude: boogie_si_record_i16
 
 Start Analyzing Prelude: boogie_si_record_i32
 
 Start Analyzing Prelude: boogie_si_record_i64
 
 Start Analyzing Prelude: boogie_si_record_i8
 
 Start Analyzing Prelude: boogie_si_record_ref
 
 Start Analyzing Prelude: $initialize
 
 SMACK found no errors with unroll bound 3.
